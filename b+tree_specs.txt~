b+tree + index management specs.

B+tree nodes:
- is_leaf
- N pointers (block_id's)
- N-1 keys. 

Each node should fit in a block defined by the DB instance.
- 4 bytes: is_leaf flag. 
- Pointer fields are block id's.
  - Pointer size: max(index file name, original table name) + 8,
    where 8 is to encode the int offset for the file in question (4),
    as well as the length of the filename string in the string portion of
    the block_id.
- Key node/size:
  - Size of the index key. For example, key=varchar(16) => size=16,
    key=varchar(16)+int => size = 20.

Index file:
- Each index file is a sequence of blocks, where each block stores a node
  as described above.

Global Index metadata:
- (table name, field name) pairs - for each table, store if there is an
  index on it.

Local Index metadata:
(we are at a specific table name, field name instance, perhaps a separate
table)
- is_empty flag.
- Root node pointer.
- Size of N.
- Size of key.
- Size of pointer.
- free list? 

